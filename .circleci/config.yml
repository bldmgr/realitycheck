version: 2.1

parameters:
  cache-path:
    type: string
    default: "/tmp/docker-cache" 

commands:
  restore-dlc-cache:
    steps:
      - restore_cache:
          keys:
            - docker-cache-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-6339

  save-dlc-cache:  
    steps:
      - save_cache:
          paths:
            - << pipeline.parameters.cache-path >>
          key: docker-cache-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-6339

  setup-dlc-path:
    steps:
      - run:
          name: Prepare Docker Cache Directory
          command: |
                   mkdir -p << pipeline.parameters.cache-path >>
                   sudo chmod +rx /tmp
                   sudo chown -R circleci:circleci /tmp
                   ls -la /tmp
                   ls -la << pipeline.parameters.cache-path >>
      - run:
          name: Enable buildkit feature and restart docker
          command: |
              sudo tee /etc/docker/daemon.json > /dev/null \<<EOF
              {
                "data-root": "<< pipeline.parameters.cache-path >>",
                "features": {
                  "buildkit": true
                }
              }
              EOF
              sudo systemctl restart docker 


jobs: 
  compose-pull:
    machine:
      image: default
      docker_layer_caching: true
    environment:
      DOCKER_LAYER_CACHE: << pipeline.parameters.cache-path >>
    steps:
      - checkout
      - restore-dlc-cache
      - setup-dlc-path
      - run: docker compose -f compose.yaml pull
      - run: df -h
      - run: 
          name:  Prune images
          command: |
                   docker image prune -f
      - run: 
          name:  Prune containers
          command: |
                   docker container prune -f
      - run: 
          name:  Prune volumes
          command: |
                   docker volume prune -f
      - run: 
          name:  Prune networks
          command: |
                   docker network prune -f
      - run:
          name:  Stopping docker.service
          command: |
                   sudo systemctl stop docker 
                   sudo systemctl stop docker.socket
                   sudo chmod +rx /tmp
                   sudo chown -R circleci:circleci /tmp
                   ls -la /tmp
                   ls -la << pipeline.parameters.cache-path >>
      - save-dlc-cache

  build-image-builx-cache:
    machine: 
      image: default
      docker_layer_caching: true
    steps:
      - checkout
      - run: |
             docker context create docker.engine.sourcefire.com
             docker buildx create --use docker.engine.sourcefire.com

             docker buildx build --platform=linux/amd64 --file Dockerfile --load -t docker.engine.sourcefire.com/testing:dlc .
             


  build-image-no-cache:
    machine: true
    steps:
      - checkout
      - run: docker build . -t dev-image
      
  build-no-cache-buildkit:
    machine: true
    environment:
      DOCKER_BUILDKIT: '1'
    steps:
      - checkout
      - run: docker build . -t dev-image
  
  dlc-test:
    machine:
      image: << parameters.image-version >>
      docker_layer_caching: true
    parameters:
      image-version: 
        type: string
    environment: 
      DOCKER_BULDKIT: '1'
    steps:
      - checkout
      - run: df -h
      - run: docker version
      - run: 
          name: Fetch AMI ID from Instance Metadata for reference
          command: |
             TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
             && curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/ami-id
      - run: docker build . -t bldmgr-image --cache-from=bldmgr-image --build-arg BUILDKIT_INLINE_CACHE=1

workflows:
  main:
    jobs:
     - build-image-builx-cache
     - compose-pull
     #- dlc-test:           
     #        matrix:
     #          parameters:
     #             image-version: [
     #             "ubuntu-2404:2024.05.15",
     #             "ubuntu-2004:2021.07.30", 
     #             "ubuntu-2004:2023.02.6", 
     #             "ubuntu-2004:2022.10.10", 
     #             "ubuntu-2004:2023.03.28", 
     #             "ubuntu-2204", 
     #             "default-old",
     #             "cisco-default",
     #             "cisco-defailt-old",
     #             "cisco-testing:2024.06.06",
     #             "cisco-testing:2024.04.04",
     #             "cisco-testing:2024.05.14",
     #             "ubuntu-2204:2023.12.12",
     #             "ubuntu-2204:2024.01.15",
     #             "ubuntu-2204:2023.12.08",
     #             "ubuntu-2204:2024.01.17",
     #             "ubuntu-2204:2023.12.14",
     #             "ubuntu-2204:2024.04.02"
     #             ]